@page "/episodes"
@using Newtonsoft.Json.Linq;
@using Newtonsoft.Json;
@using RickAndMorty.Shared.Data;
@using RickAndMorty.Web.Services;



<h3>EpisodesIndex</h3>

    <body>
        <table>
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Episode</th>
                    <th>Air Date</th>
                </tr>
            </thead>
            <tbody>
                @*@if (Episodes?.Count >= 0)
                {
                    @foreach (var episode in Episodes!)
                    {
                        <tr>
                            <td>@episode!.Name</td>
                            <td>@episode!.Episode</td>
                            <td>@episode!.Air_date</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>Loading</tr>
                }*@

            <tr>
                <td>Pilot</td>
                <td>S01E01</td>
                <td>December 2, 2013</td>
            </tr>
            <tr>
                <td>Lawnmower Dog</td>
                <td>S01E02</td>
                <td>December 9, 2013</td>
            </tr>
            <tr>
                <td>Anatomy Park</td>
                <td>S01E03</td>
                <td>December 16, 2013</td>
            </tr>
            <tr>
                <td>"M. Night Shaym-Aliens!</td>
                <td>S01E04</td>
                <td>January 13, 2014</td>
            </tr>


            </tbody>
        </table>
    </body>

@code {
    //public List<Episodes>? Episodes  { get; set; }

    //public List<Character>? Characters { get; set; }

    //protected override async Task OnInitializedAsync()
    //{
    //    ConsumeAPI consumeAPI = new ConsumeAPI();

    //    Episodes = await consumeAPI.ConsumeApiAsync<Episodes>("https://rickandmortyapi.com/api/episode");

    //    foreach (var episode in Episodes)
    //    {
    //        foreach (var character in episode.Characters!)
    //        {
    //            //Character episodeCharacter = new Character();
    //            Characters = await consumeAPI.ConsumeApiAsync<Character>(character);
                
    //        }
            
    //    }

    //    Characters = await consumeAPI.ConsumeApiAsync<Character>("character");
    //}

}
