@page "/episodes"
@using Newtonsoft.Json.Linq;
@using Newtonsoft.Json;
@using RickAndMorty.Shared.Data;
@using RickAndMorty.Web.Services;



<h3>EpisodesIndex</h3>

    <body>
        <table>
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Episode</th>
                    <th>Air Date</th>
                </tr>
            </thead>
            <tbody>
                @if (Episodes?.Count >= 0)
                {
                    @foreach (var episode in Episodes!)
                    {
                        <tr>
                            <td>@episode!.Name</td>
                            <td>@episode!.Episode</td>
                            <td>@episode!.Air_date</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>Loading</tr>
                }
                

            </tbody>
        </table>
    </body>

@code {
    public List<Episodes>? Episodes  { get; set; }

    public List<Character>? Characters { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ConsumeAPI consumeAPI = new ConsumeAPI();

        Episodes = await consumeAPI.ConsumeApiAsync<Episodes>("https://rickandmortyapi.com/api/episode");

        foreach (var episode in Episodes)
        {
            foreach (var character in episode.Characters!)
            {
                //Character episodeCharacter = new Character();
                Characters = await consumeAPI.ConsumeApiAsync<Character>(character);
                
            }
            
        }

        Characters = await consumeAPI.ConsumeApiAsync<Character>("character");
    }

}
