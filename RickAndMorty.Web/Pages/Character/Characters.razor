@page "/character/{EpisodeId:int}"
@using RickAndMorty.Shared.Data;
@using RickAndMorty.Web.Services;

@if (Episode is null)
{
    <h1>Loading...</h1>
}
else
{
    <h2>Episode @EpisodeId: <b>@Episode.name</b></h2>
}




<table class="table align-middle mb-0 bg-white">
    <thead class="bg-light">
        <tr>
            <th scope="col">Character</th>
            <th scope="col">Status</th>
            <th scope="col">Specie</th>
            <th scope="col">Type</th>
            <th scope="col">Origin</th>
            <th scope="col">Location</th>
        </tr>
    </thead>
    <tbody>

        @if (ListCharacters == null)
        {
            <tr>
                <td>
                    Loading...
                </td>
            </tr>
        }
        else
        {
            @foreach (var character in ListCharacters)
            {
                <tr>
                    <td>
                        <div class="d-flex align-items-center">

                            <img src=@character.image
                                 alt=""
                                 style="width: 100px; height: 100px"
                                 class="rounded-circle" />
                            <div class="ms-3">
                                <p class="fw-bold mb-1">@character.name</p>
                            </div>
                        </div>
                    </td>
                    <td>
                        <p class="fw-normal mb-1">@character.status</p>
                    </td>
                    <td>
                        <p class="fw-normal mb-1">@character.species</p>
                        <p class="fw-normal mb-1">@character.gender</p>
                    </td>
                    <td>Unknown</td>
                    <td>
                        <a href="/location" class="btn btn-link btn-sm btn-rounded">
                            @character.origin!.name
                        </a>
                    </td>
                    <td>
                        <a href="/location" class="btn btn-link btn-sm btn-rounded">
                            @character.location!.name
                        </a>
                    </td>
                </tr>
            }
        }

        
    </tbody>
</table>




@code {

    [Parameter]
    public int EpisodeId { get; set; }

    public ApiEpisode? Episode { get; set; }

    public List<ApiCharacters>? ListCharacters { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ConsumeAPI consumeAPI = new ConsumeAPI();

        Episode = await consumeAPI.GetIndividualDataAsync<ApiEpisode>($"episode/{EpisodeId}");

        string CharacterIds = string.Empty;

        foreach (var charac in Episode.characters!)
        {
            int loc = charac.IndexOf("er/") + 3;
            CharacterIds = CharacterIds + charac.Substring(loc, (charac.Length - loc)) + ",";

        }
        CharacterIds = CharacterIds.Substring(0, CharacterIds.Length - 1);

        ListCharacters = await consumeAPI.GetListDataAsync<ApiCharacters>($"character/{CharacterIds}");
    }
}
